---
# yamllint disable rule:line-length
###############################################################################
# Configure Forgejo Install
###############################################################################
# Create directories, systemd services, and copy user provided certs. Set
# configuration and make it read-only to forgejo_srv_user. Run Forgejo under
# specific role user, add ability to restart the service daily.
#
# Dump running configuration if enabled before applying changes.
#
# New Forgejo options must be manually added to the template and role
# default templates.
#
# Reference:
# * https://forgejo.org/docs/latest/admin/installation-binary/
# * https://codeberg.org/forgejo/forgejo/src/branch/forgejo/contrib/systemd/forgejo.service
# yamllint enable rule:line-length

# Directory created, new version, and service running from previous role.
- name: 'Config | backup existing installation'
  when: >
    _forgejo_srv_backup_dump.raw and
    _repo_changed and
    _forgejo_existing_service.changed
  ansible.builtin.command:
    argv:
      - '{{ forgejo_role_repo_extract_symlink }}'
      - 'dump'
      - '--config'
      - '{{ _forgejo.app_ini_path }}'
    chdir: '{{ _forgejo.backup_path }}'
  changed_when: true
  become: true
  become_user: '{{ _forgejo_srv_user.raw }}'

- name: 'Config | manage required directories'
  when: _forgejo_srv_media_set_perms_file_enable.raw
  ansible.builtin.file:
    path: '{{ item }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '{{ _forgejo_srv_media_perms_folder.raw }}'
    recurse: '{{ _forgejo_srv_media_perms_recursive_enable.raw }}'
    state: 'directory'
  loop:
    - '{{ _forgejo_cfg_mailer_client_cert_file.role | dirname }}'  # Mail dir.
    - '{{ _forgejo_cfg_work_path.raw }}'
    - '{{ _forgejo_cfg_repository_upload_temp_path.raw }}'
    - '{{ _forgejo_cfg_repository_local_local_copy_path.raw }}'
    - '{{ _forgejo_cfg_server_app_data_path.parsed }}'  # JWT dir.
    - '{{ _forgejo_cfg_server_pprof_data_path.raw }}'
    - '{{ _forgejo_cfg_indexer_issue_indexer_path.raw }}'
    - '{{ _forgejo_cfg_indexer_repo_indexer_path.raw }}'
    - '{{ _forgejo_cfg_server_acme_directory.raw }}'
    - '{{ _forgejo_cfg_session_provider_config.raw }}'
    - '{{ _forgejo_cfg_log_root_path.raw }}'

- name: 'Config | manage required data directories'
  when: _forgejo_srv_media_set_perms_file_enable.raw
  ansible.builtin.file:
    path: '{{ item }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '{{ _forgejo_srv_media_perms_folder.raw }}'
    recurse: '{{ _forgejo_srv_media_perms_recursive_enable.raw }}'
    state: 'directory'
  become:
    '{{ true if _forgejo_srv_user_data_manage_enable.raw else omit }}'
  become_user: '{{
      _forgejo_srv_user.raw
      if _forgejo_srv_user_data_manage_enable.raw else
      omit
    }}'
  loop:
    - '{{ _forgejo.data_path }}'
    - '{{ _forgejo_cfg_repository_root.raw }}'
    - '{{ _forgejo_cfg_database_path.parsed }}'
    - '{{ _forgejo_cfg_queue_datadir.raw }}'
    - '{{ _forgejo_cfg_attachment_path.raw }}'
    - '{{ _forgejo_cfg_git_home_path.raw }}'
    - '{{ _forgejo_cfg_packages_chunked_upload_path.raw }}'
    - '{{ _forgejo_cfg_packages_path.raw }}'

- name: 'Config | set SSH test key path'
  when: >
    _forgejo_cfg_server_ssh_key_test_path.raw | length > 0 and
    _forgejo_cfg_server_ssh_key_test_path.raw != '/tmp' and
    _forgejo_srv_media_set_perms_file_enable.raw
  ansible.builtin.file:
    path: '{{ _forgejo_cfg_server_ssh_key_test_path.raw }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '{{ _forgejo_srv_media_perms_folder.raw }}'
    recurse: '{{ _forgejo_srv_media_perms_recursive_enable.raw }}'
    state: 'directory'

- name: 'Config | set local storage'
  when: >
    _forgejo_cfg_storage_storage_type.raw == 'local' and
    _forgejo_cfg_storage_path.raw != '' and
    _forgejo_srv_media_set_perms_file_enable.raw
  ansible.builtin.file:
    path: '{{ _forgejo_cfg_storage_path.raw }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '{{ _forgejo_srv_media_perms_folder.raw }}'
    recurse: '{{ _forgejo_srv_media_perms_recursive_enable.raw }}'
    state: 'directory'

- name: 'Config | set restricted data directories'
  ansible.builtin.file:
    path: '{{ item }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '0700'
    recurse: false
    state: 'directory'
  become:
    '{{ true if _forgejo_srv_user_data_manage_enable.raw else omit }}'
  become_user: '{{
      _forgejo_srv_user.raw
      if _forgejo_srv_user_data_manage_enable.raw else
      omit
    }}'
  loop:
    - '{{ _forgejo_srv_user.role ~ "/.ssh" }}'
    - '{{ _forgejo.backup_path }}'

- name: 'Config | set Oauth2 private key file'
  when: _forgejo_cfg_oauth2_jwt_signing_private_key_file.role | length > 0
  ansible.builtin.copy:
    src: '{{ _forgejo_cfg_oauth2_jwt_signing_private_key_file.role }}'
    dest: '{{ _forgejo_cfg_oauth2_jwt_signing_private_key_file.parsed }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '0400'
    directory_mode: '0750'
    force: true

# Auto-regenerated on startup if missing.
- name: 'Config | reset Oauth2 private key file'
  when: _forgejo_cfg_oauth2_jwt_signing_private_key_file.role | length == 0
  ansible.builtin.file:
    path: '{{ _forgejo_cfg_oauth2_jwt_signing_private_key_file.parsed }}'
    state: 'absent'

- name: 'Config | set mail client certificates'
  when: _forgejo_cfg_mailer_use_client_cert.raw
  ansible.builtin.copy:
    src: '{{ item.raw }}'
    dest: '{{ item.role }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '0400'
    directory_mode: '0750'
    force: true
  loop:
    - '{{ _forgejo_cfg_mailer_client_cert_file }}'
    - '{{ _forgejo_cfg_mailer_client_key_file }}'
  loop_control:
    label: '{{ item.raw }}'

- name: 'Config | remove mail client certificates'
  when: not _forgejo_cfg_mailer_use_client_cert.raw
  ansible.builtin.file:
    path: '{{ item.role }}'
    state: 'absent'
  loop:
    - '{{ _forgejo_cfg_mailer_client_cert_file }}'
    - '{{ _forgejo_cfg_mailer_client_key_file }}'
  loop_control:
    label: '{{ item.raw }}'

- name: 'Config | set server host keys'
  when: _forgejo_cfg_server_ssh_server_host_keys.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _forgejo_cfg_server_ssh_server_host_keys.raw }}'
    dest: '{{ _forgejo_cfg_server_ssh_server_host_keys.role }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '0400'
    directory_mode: '0750'
    force: true

- name: 'Config | set user trust keys'
  when: _forgejo_cfg_server_ssh_trusted_user_ca_keys_filename.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _forgejo_cfg_server_ssh_trusted_user_ca_keys_filename.raw }}'
    dest: '{{ _forgejo_cfg_server_ssh_trusted_user_ca_keys_filename.parsed }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '0400'
    directory_mode: '0750'
    force: true

- name: 'Config | remove user trust keys'
  when: _forgejo_cfg_server_ssh_trusted_user_ca_keys_filename.raw | length == 0
  ansible.builtin.file:
    path: '{{ _forgejo_cfg_server_ssh_trusted_user_ca_keys_filename.parsed }}'
    state: 'absent'

- name: 'Config | set custom CA trust chain root certificate'
  when: _forgejo_cfg_server_acme_ca_root.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _forgejo_cfg_server_acme_ca_root.raw }}'
    dest: '{{ _forgejo_cfg_server_acme_ca_root.parsed }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '0400'
    directory_mode: '0750'
    force: true

- name: 'Config | remove custom CA trust chain root certificate'
  when: _forgejo_cfg_server_acme_ca_root.raw | length == 0
  ansible.builtin.file:
    path: '{{ _forgejo_cfg_server_acme_ca_root.raw }}'
    state: 'absent'

- name: 'Config | set server certificate'
  when: _forgejo_cfg_server_cert_file.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _forgejo_cfg_server_cert_file.raw }}'
    dest: '{{ _forgejo_cfg_server_cert_file.parsed }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '0400'
    directory_mode: '0750'
    force: true

- name: 'Config | remove server certificate'
  when: _forgejo_cfg_server_cert_file.raw | length == 0
  ansible.builtin.file:
    path: '{{ _forgejo_cfg_server_cert_file.parsed }}'
    state: 'absent'

- name: 'Config | set server certificate key'
  when: _forgejo_cfg_server_key_file.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _forgejo_cfg_server_key_file.raw }}'
    dest: '{{ _forgejo_cfg_server_key_file.parsed }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '0400'
    directory_mode: '0750'
    force: true

- name: 'Config | remove server certificate key'
  when: _forgejo_cfg_server_key_file.raw | length == 0
  ansible.builtin.file:
    path: '{{ _forgejo_cfg_server_key_file.parsed }}'
    state: 'absent'

- name: 'Config | set config'
  ansible.builtin.template:
    src: 'app.ini.j2'
    dest: '{{ _forgejo.app_ini_path }}'
    owner: '{{ _forgejo_srv_user.parsed }}'
    group: '{{ _forgejo_srv_group.parsed }}'
    mode: '0640'

- name: 'Config | Forgejo service'
  ansible.builtin.include_role:
    name: 'r_pufky.deb.systemd'
  vars:
    systemd_daemon_reload_enable: true
    systemd_services:
      - name: 'forgejo'
        state: 'present'
        drop_in: false
        unit:
          description: 'Forgejo (Beyond coding. We forge.)'
          after:
            - 'syslog.target'
            - 'network.target'
        service:
          type: 'simple'
          restart_sec: '2s'
          exec_start:
            - >-
              {{ forgejo_role_repo_extract_symlink }} web
              --config "{{ _forgejo.app_ini_path }}"
              --custom-path "{{ _forgejo.custom_path }}"
              --work-path "{{ _forgejo_cfg_work_path.raw }}"
          runtime_max_sec: '{{
              "1d"
              if _forgejo_srv_restart_daily_enable.raw else
              "infinity"
            }}'
          restart: 'always'
        exec:
          user: '{{ _forgejo_srv_user.raw }}'
          group: '{{ _forgejo_srv_group.raw }}'
          working_directory: '{{ _forgejo_cfg_work_path.raw }}'
          environment:
            - var: 'USER'
              value: '{{ _forgejo_srv_user.raw }}'
            - var: 'HOME'
              value: '{{ _forgejo_srv_user.role }}'
        install:
          wanted_by:
            - 'multi-user.target'

- name: 'Config | set service hardening drop-in'
  when: _forgejo_srv_harden_enable.raw
  ansible.builtin.include_role:
    name: 'r_pufky.deb.systemd'
  vars:
    systemd_daemon_reload_enable: true
    systemd_services:
      - name: 'forgejo'
        state: 'present'
        drop_in: true
        service: {}
        exec:
          no_new_privileges: true
          private_tmp: true
          protect_home: true
          protect_system: true
          private_devices: true
          u_mask: '0077'
          protect_kernel_tunables: true
          protect_kernel_modules: true
          protect_kernel_logs: true
          protect_hostname: '{{ not _forgejo_srv_container_enable.raw }}'
          protect_clock: true
          protect_control_groups: true
          lock_personality: true
          restrict_realtime: true
          restrict_namespaces_allow: true
          restrict_suid_sgid: true
          memory_deny_write_execute: true
          remove_ipc: true
        resource_control:
          restrict_address_families_allow: ['AF_INET', 'AF_INET6']
          restrict_address_families_deny: ['AF_UNIX']
          ip_accounting: true

- name: 'Config | remove service hardening drop-in'
  when: not _forgejo_srv_harden_enable.raw
  ansible.builtin.include_role:
    name: 'r_pufky.deb.systemd'
  vars:
    systemd_daemon_reload_enable: true
    systemd_services:
      - name: 'forgejo'
        state: 'absent'
        drop_in: true

# Local user management requires service running or running 'install' state.
- name: 'Validate | start services'
  ansible.builtin.systemd:
    name: '{{ item }}'
    enabled: true
    daemon_reload: true
    state: 'started'
  failed_when: false
  loop: '{{
      ["redis-server.service" if _forgejo_srv_redis_enable.raw else "",
       "forgejo.service"] | select()
    }}'

- name: 'Config | start services'
  ansible.builtin.meta: 'flush_handlers'
