---
###############################################################################
# Manage Local Forgejo Users
###############################################################################
# Create or delete local forgejo users. Forgejo CLI must be run as installed
# user.
#
# Forgejo must be running for local user management to occur (either with
# pre-existing users in the DB or INSTALL_LOCK=True); otherwise attempts will
# fail with:
#
#   [F] Unable to load config file for a installed Forgejo instance, you should
#   either use "--config" to set your config file (app.ini), or run
#   "forgejo web" command to install Forgejo.
#
# Forgejo will report service is active and running but may not be ready to
# accept API requests for user modifications. Wait until the webserver is
# responding before attempting API calls. Wait will eventually timeout and
# proceed even if enabled.
#
# Disabling may lead to errors during role application:
#
#   Command error: database is locked
#
# Query updated user list before each operation to prevent tool failures due to
# non-existent or pre-existing users.

- name: 'Local users | poll service ðŸ—˜'
  when: _forgejo_srv_poll_enable.raw
  ansible.builtin.debug:
    msg: |
      â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
      â”‚                                                                   â”‚
      â”‚               Waiting until port becomes available.               â”‚
      â”‚                                                                   â”‚
      â”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯
      â”‚ Max {{ forgejo_role_poll_timeout }} seconds.

- name: 'Local users | poll service'
  when: _forgejo_srv_poll_enable.raw
  ansible.builtin.wait_for:
    port: '{{ _forgejo_cfg_server_http_port.raw }}'
    delay: 5
    sleep: '{{ forgejo_role_poll_interval }}'
    timeout: '{{ forgejo_role_poll_timeout }}'
    msg: |
      â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
      â”‚                                                                   â”‚
      â”‚                            Timed out.                             â”‚
      â”‚                                                                   â”‚
      â”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯
      â”‚ May receive "database is locked" errors.

- name: 'Local users | query'
  ansible.builtin.command:
    argv:
      - '{{ forgejo_role_repo_extract_symlink }}'
      - '{{ _forgejo_cfg_custom_path._args }}'
      - '{{ _forgejo_cfg_custom_path._config_file }}'
      - 'admin'
      - 'user'
      - 'list'
  changed_when: false
  become: true
  become_user: '{{ _forgejo_srv_user.raw }}'
  register: _forgejo_srv_user_list

- name: 'Local users | create users'
  when: >
    item.state == 'present' and
    item.username not in _forgejo_srv_user_list.stdout and
    item.email not in _forgejo_srv_user_list.stdout
  ansible.builtin.command:
    argv:
      - '{{ forgejo_role_repo_extract_symlink }}'
      - '{{ _forgejo_cfg_custom_path._args }}'
      - '{{ _forgejo_cfg_custom_path._config_file }}'
      - 'admin'
      - 'user'
      - 'create'
      - '--username'
      - '{{ item.username }}'
      - '--password'
      - '{{ item.password }}'
      - '--email'
      - '{{ item.email }}'
      - '--admin={{ item.admin }}'
      - '--must-change-password={{ item.must_change_password }}'
      - '--restricted={{ item.restricted }}'
  register: _forgejo_status
  failed_when: '"successfully created" not in _forgejo_status.stdout'
  changed_when: '"successfully created" in _forgejo_status.stdout'
  become: true
  become_user: '{{ _forgejo_srv_user.raw }}'
  loop: '{{ _forgejo_srv_local_users._user_list }}'
  loop_control:
    label: '{{ item.username }}'

- name: 'Local users | query'
  ansible.builtin.command:
    argv:
      - '{{ forgejo_role_repo_extract_symlink }}'
      - '{{ _forgejo_cfg_custom_path._args }}'
      - '{{ _forgejo_cfg_custom_path._config_file }}'
      - 'admin'
      - 'user'
      - 'list'
  changed_when: false
  become: true
  become_user: '{{ _forgejo_srv_user.raw }}'
  register: _forgejo_srv_user_list

- name: 'Local users | remove users'
  when: >
    item.state == 'absent' and
    item.username in _forgejo_srv_user_list.stdout
  ansible.builtin.command:
    argv:
      - '{{ forgejo_role_repo_extract_symlink }}'
      - '{{ _forgejo_cfg_custom_path._args }}'
      - '{{ _forgejo_cfg_custom_path._config_file }}'
      - 'admin'
      - 'user'
      - 'delete'
      - '--username'
      - '{{ item.username }}'
  register: _forgejo_status
  failed_when: '"error" in _forgejo_status.stdout'
  changed_when: 'item.username in _forgejo_status.stdout'
  become: true
  become_user: '{{ _forgejo_srv_user.raw }}'
  loop: '{{ _forgejo_srv_local_users._user_list }}'
  loop_control:
    label: '{{ item.username }}'
